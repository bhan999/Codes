#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
// pointer to array concept
// switch case
// function creation and passing 2D array as an argument using pointer to array -- int (*name)[no._of_column], int row, int column
// getch() .... if i use scanf(), then i need to press enter button also after each entry
// atoi(); //works only when input is string
// rand() & srand(time(NULL))      // https://www.youtube.com/watch?v=oXEDMNXzuo4
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Priorities for smartC comp:
//1. To see if there are two 'O'(third neither 'X' not 'O') in a row or column, so that comp can mark third as 'O'
//2. To see if in any of the two diagonals 'O' can be marked
//3. prevent any cross to happen for player(row or column or diagonal cross) i.e. save players' cross by putting 'O'
//***ensure 1 to 3 run one time and then the turn goes to player
//4. if player plays corner trick, save it



void swap(char (*a)[3],int row, int column, char entry, int k)
{
    auto int i,j,flag=0;
    for(i=0;i<row;i++)
    {
        for(j=0;j<column;j++)
        {
            if(k%2==0)
            {
                if(a[i][j]==entry)      // not needed - (a[i][j]==entry && a[i][j]!='X')- cuz first condition only is sufficient
                {
                    a[i][j]='X';
                    flag=1;
                    break;
                }
            }
            if(k%2!=0)
            {
                if(k==1)
                {
                    a[1][1]='O';
                    flag=1;
                    break;
                }
            }
        }
        if(flag==1)     //after above if() break works, it takes to below of for(j=0....). Hence, we need to break for(i=0.....) also.
            break;
    }
}

void printmatrix(char (*a)[3], int row, int column)      // int (*a)[3] is pointer to array.
{
    int i,j;
    system("cls");
    printf("\n\n\n\t\t\t----------------------------- Tic Tac Toe -----------------------------\n\n");
    printf("First player - X\nSecond player - O\n\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<column;j++)
        {
            printf("%c   ",a[i][j]);
        }
        printf("\n");
    }
}

int rowColDiaFillingSaving(char (*a)[3])
{
    int i,j,counter,counterO,counterX,m,n;
             //to check if any row has empty box and remaining are filled with 'O' for comp
             for(i=0;i<3;i++)
             {
                 counterO=counterX=0; m=n='\0';
                 for(j=0;j<3;j++)
                 {
                     if(a[i][j]=='O')
                        counterO++;
                     else
                     {
                        if(a[i][j]!='X' && a[i][j]!='O')
                                {
                                    counterX++;
                                    m=i;n=j;
                                }
                     }
                 }
                 if(counterO==2 && counterX==1)
                 {
                     a[m][n]='O';
                     return 0;
                 }
             }

            //to check if any column has empty box and remaining are filled with 'O' for comp
            for(j=0;j<3;j++)
             {
                 counterO=counterX=0; m=n='\0';
                 for(i=0;i<3;i++)
                 {
                     if(a[i][j]=='O')
                        counterO++;
                     else
                     {
                         if(a[i][j]!='X' && a[i][j]!='O')
                         {
                             counterX++;
                             m=i;n=j;
                         }
                     }
                 }
                 if(counterO==2 && counterX==1)
                 {
                     a[m][n]='O';
                     return 0;
                 }
             }

            //to check if left to right diagonal has empty box and remaining are filled with 'O' for comp
            counterO=counterX=0; m=n='\0';
            for(i=0;i<3;i++)
            {
                if(a[i][i]=='O')
                    counterO++;
                else
                {
                    if(a[i][i]!='X' && a[i][i]!='O')
                    {
                        counterX++;
                        m=i;
                    }
                }
                if(counterO==2 && counterX==1)
                {
                    a[m][m]='O';
                    return 0;
                }
            }

            //to check if right to left diagonal has empty box and remaining are filled with 'O' for comp
            counterO=counterX=0; m=n='\0'; j=2;
            for(i=0;i<3;i++)
            {
                if(a[i][j]=='O')
                    counterO++;
                else
                {
                    if(a[i][j]!='X' && a[i][j]!='O')
                    {
                        counterX++;
                        m=i;n=j;
                    }
                }
                if(counterO==2 && counterX==1)
                {
                    a[m][n]='O';
                    return 0;
                }
                j--;
            }

//to check if any row has a possible 'X' formation and remaining will be filled with 'O' to save comp
             for(i=0;i<3;i++)
             {
                 counter=counterX=0; m=n='\0';
                 for(j=0;j<3;j++)
                 {
                      if(a[i][j]=='X')
                          counter++;
                      else
                      {
                        if(a[i][j]!='X' && a[i][j]!='O')
                        {
                            counterX++;
                            m=i;n=j;
                        }
                      }
                 }
                 if(counter==2 && counterX==1)
                 {
                     a[m][n]='O';
                     return 0;
                 }
             }


//to check if any column has a possible 'X' formation and remaining will be filled with 'O' to save comp
            for(j=0;j<3;j++)
             {
                 counter=counterX=0; m=n='\0';
                 for(i=0;i<3;i++)
                 {
                     if(a[i][j]=='X')
                            counter++;
                     else
                     {
                         if(a[i][j]!='X' && a[i][j]!='O')
                         {
                             counterX++;
                             m=i;n=j;
                         }
                     }
                 }
                 if(counter==2 && counterX==1)
                 {
                     a[m][n]='O';
                     return 0;
                 }
             }



//to check if left to right has a possible 'X' formation and remaining will be filled with 'O' to save comp
            counter=counterX=0; m=n='\0';
            for(i=0;i<3;i++)
            {
                if(a[i][i]=='X')
                        counter++;
                else
                {
                    if(a[i][i]!='X' && a[i][i]!='O')
                    {
                        counterX++;
                        m=i;
                    }
                }
                if(counter==2 && counterX==1)
                {
                    a[m][m]='O';
                    return 0;
                }
            }

//to check if right to left has a possible 'X' formation and remaining will be filled with 'O' to save comp
            counter=counterX=0; m=n='\0'; j=2;
            for(i=0;i<3;i++)
            {
                if(a[i][j]=='X')
                        counter++;
                else
                {
                    if(a[i][j]!='X' && a[i][j]!='O')
                    {
                        counterX++;
                        m=i;n=j;
                    }
                }
                if(counter==2 && counterX==1)
                {
                    a[m][n]='O';
                    return 0;
                }
                j--;
            }
            return 1;       //cuz if no for loop runs from above, then automaticall function will return 0.
}

int winnerchecker(char (*a)[3])
{
    int i,j,tickOR,tickOC,tickXR,tickXC,tickOD1=0,tickOD2=0,tickXD1=0,tickXD2=0,m=2,draw;
    //For rows & coumns
    for(i=0;i<3;i++)
    {
        if(a[i][i]=='O')        //if i remember from below codes, L2R diagonal needs only i & R2L diagonal needs two
            tickOD1++;
        if(a[i][m]=='O')
            tickOD2++;
        if(a[i][i]=='X')
            tickXD1++;
        if(a[i][m]=='X')
            tickXD2++;
        m--;
        tickOR=tickXR=tickOC=tickXC=0;
        for(j=0;j<3;j++)
        {
            if(a[i][j]=='O')
                tickOR++;
            if(a[j][i]=='O')
                tickOC++;
            if(a[i][j]=='X')
                tickXR++;
            if(a[j][i]=='X')
                tickXC++;
        }
        if(tickOR==3 || tickOC==3 || tickOD1==3 || tickOD2==3)
            return 1;
        if(tickXR==3 || tickXC==3 || tickXD1==3 || tickXD2==3)
            return 2;
    }

    draw=0;
    for(i=0;i<3;i++)        //to check if it is a draw..
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]=='X' || a[i][j]=='O')
                draw++;
        }
        if(draw==9)
        {
            return 3;
        }
    }
}
void smartC()
{
    auto char a[3][3]={'1','2','3','4','5','6','7','8','9'}; int k,rand1,clickO=0,click0=0,i,j,flag=0,info=0; char entry;
    printmatrix(a,3,3);     //print only once
    for(k=0;1;k++)
    {
        if(k%2==0)      //player 1
        {
            swap(a,3,3,entry=getch(),k);      // using pointer to array concept
            printmatrix(a,3,3);     //here multiple times print
            if(winnerchecker(a)==2)
            {
                printf("\n\nThe winner is first player - X! Good job!\n\n");
                break;
            }
            if(winnerchecker(a)==3)
            {
                printf("\n\nIt's a draw!\n\n");
                break;
            }
        }
        if(k%2!=0)      //comp
        {
             if(rowColDiaFillingSaving(a)==0)
                     1;
             else
             {
                 if(k==1)
                 {
                     if(a[0][0] == 'X' || a[0][2] == 'X' || a[2][0] == 'X' || a[2][2] == 'X')       //if Player 1 starts at corners
                     {
                        a[1][1]='O';
                        printmatrix(a,3,3);     //here multiple times print
                     }

                     if(a[0][1] == 'X')     //if Player 1 starts at edges
                     {
                        srand(time(NULL));
                        rand1=0;
                        while(rand1!=7 && rand1!=9)
                        {
                            rand1=rand()%10;
                        }
                        if(rand1 == 7)
                            a[2][0]='O';
                        if(rand1 == 9)
                            a[2][2]='O';
                        printmatrix(a,3,3);     //here multiple times print
                     }

                     if(a[2][1] == 'X')     //if Player 1 starts at edges
                     {
                        srand(time(NULL));
                        rand1=0;
                        while(rand1!=1 && rand1!=3)
                        {
                            rand1=rand()%10;
                        }
                        if(rand1 == 1)
                            a[0][0]='O';
                        if(rand1 == 3)
                            a[0][2]='O';
                        printmatrix(a,3,3);     //here multiple times print
                     }

                     if(a[1][0] == 'X')     //if Player 1 starts at edges
                     {
                        srand(time(NULL));
                        rand1=0;
                        while(rand1!=3 && rand1!=9)
                        {
                            rand1=rand()%10;
                        }
                        if(rand1 == 3)
                            a[0][2]='O';
                        if(rand1 == 9)
                            a[2][2]='O';
                        printmatrix(a,3,3);     //here multiple times print
                     }

                     if(a[1][2] == 'X')     //if Player 1 starts at edges
                     {
                        srand(time(NULL));
                        rand1=0;
                        while(rand1!=1 && rand1!=7)
                        {
                            rand1=rand()%10;
                        }
                        if(rand1 == 1)
                            a[0][0]='O';
                        if(rand1 == 7)
                            a[2][0]='O';
                        printmatrix(a,3,3);     //here multiple times print
                     }

                     if(a[1][1] == 'X')     //if Player 1 starts at middle
                     {
                         srand(time(NULL));
                         rand1=0;
                         while(rand1!=1 && rand1!=3 && rand1!=7 && rand1!=9)
                         {
                             rand1=rand()%10;
                         }
                         if(rand1==1)
                            a[0][0]='O';
                         if(rand1==3)
                            a[0][2]='O';
                         if(rand1==7)
                            a[2][0]='O';
                         if(rand1==9)
                            a[2][2]='O';
                     }
                 }
                 else
                 {
                     if(k==3)
                     {
                         info=0;
                         if((a[0][2]=='X' && a[1][1]=='O' && a[2][0]=='X') || (a[0][0]=='X' && a[1][1]=='O' && a[2][2]=='X'))       //Diagonal trick
                         {
                            srand(time(NULL));
                            rand1=0;
                            while(rand1!=2 && rand1!=4 && rand1!=6 && rand1!=8)
                            {
                                rand1=rand()%10;
                            }
                            if(rand1 == 2)
                                {a[0][1]='O';
                                info=1;}
                            if(rand1 == 4)
                                {a[1][0]='O';
                                info=1;}
                            if(rand1 == 6)
                                {a[1][2]='O';
                                info=1;}
                            if(rand1 == 8)
                                {a[2][1]='O';
                                info=1;}
                            printmatrix(a,3,3);
                         }

                         if(info!=1)
                         {
                             if(a[0][1]=='X' && a[1][0]=='X' && a[2][2]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                {a[0][2]='O';
                                info=1;}
                             if(a[0][1]=='X' && a[1][2]=='X' && a[2][0]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                {a[0][0]='O';
                                info=1;}
                             if(a[2][1]=='X' && a[1][0]=='X' && a[0][2]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                {a[2][2]='O';
                                info=1;}
                             if(a[2][1]=='X' && a[1][2]=='X' && a[0][0]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                {a[2][0]='O';
                                info=1;}
                         }
                         else
                         {
                             if(info!=1)
                             {
                                 if(a[1][0]=='X' && a[2][1]=='X' && a[0][2]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                    {a[0][0]='O';
                                    info=1;}
                                 if(a[1][0]=='X' && a[0][1]=='X' && a[2][2]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                    {a[2][0]='O';
                                    info=1;}
                                 if(a[1][2]=='X' && a[2][1]=='X' && a[0][0]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                    {a[0][2]='O';
                                    info=1;}
                                 if(a[1][2]=='X' && a[0][1]=='X' && a[2][0]=='O')   //from @videojames reels - https://www.youtube.com/shorts/0j7IuhOCKv8
                                    {a[2][2]='O';
                                    info=1;}
                             }
                         }
                     }
                     if(info!=1)
                         {
                             for(i=0;i<3;i++)       //if nothing above works, here the code will look for single 'O' in left to right diagonal
                             {
                                 if(a[i][i]=='O')
                                    clickO++;
                                 if(a[i][i]!='X' && a[i][i]!='O')
                                    click0++;
                                 if(i==2 && clickO==1 && click0==2)
                                 {
                                     srand(time(NULL));
                                     rand1=0;
                                     //flag=0;
                                     while(rand1!=1 && rand1!=5 && rand1!=9 && flag==0)
                                     {
                                         rand1=rand()%10;
                                         if(rand1==1)
                                         {
                                             if(a[0][0]!='O')
                                             {
                                                 a[0][0]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                         if(rand1==5)
                                         {
                                             if(a[1][1]!='O')
                                             {
                                                 a[1][1]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                         if(rand1==9)
                                         {
                                             if(a[2][2]!='O')
                                             {
                                                 a[2][2]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                     }
                                 }
                             }
                         }

                         if(info!=1)
                         {
                             click0=clickO=0;
                             j=2;
                             for(i=0;i<3;i++)       //if nothing above works, here the code will look for single 'O' in right to left diagonal
                             {
                                 if(a[i][j]=='O')
                                    clickO++;
                                 if(a[i][j]!='X' && a[i][j]!='O')
                                    click0++;
                                 j--;
                                 if(i==2 && clickO==1 && click0==2)
                                 {
                                     srand(time(NULL));
                                     rand1=0;
                                     //flag=0;
                                     while(rand1!=3 && rand1!=5 && rand1!=7 && flag==0)
                                     {
                                         rand1=rand()%10;
                                         if(rand1==3)
                                         {
                                             if(a[0][2]!='O')
                                             {
                                                 a[0][2]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                         if(rand1==5)
                                         {
                                             if(a[1][1]!='O')
                                             {
                                                 a[1][1]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                         if(rand1==7)
                                         {
                                             if(a[2][0]!='O')
                                             {
                                                 a[2][0]='O';
                                                 flag=1;
                                             }
                                             else
                                                rand1=0;
                                         }
                                     }
                                 }
                             }
                         }
//----------------------------------------------
                         if(info!=1)
                         {
                             srand(time(NULL));
                             rand1=0;
                             //flag=0;
                             while(flag==0)
                             {
                                 rand1=rand()%10;
                                 if(rand1==1)
                                 {
                                     if(a[0][0]!='O' && a[0][0]!='X')
                                     {
                                         a[0][0]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==2)
                                 {
                                     if(a[0][1]!='O' && a[0][0]!='X')
                                     {
                                         a[0][1]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==3)
                                 {
                                     if(a[0][2]!='O' && a[0][2]!='X')
                                     {
                                         a[0][2]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==4)
                                 {
                                     if(a[1][0]!='O' && a[1][0]!='X')
                                     {
                                         a[1][0]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==5)
                                 {
                                     if(a[1][1]!='O' && a[1][1]!='X')
                                     {
                                         a[1][1]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==6)
                                 {
                                     if(a[1][2]!='O' && a[1][2]!='X')
                                     {
                                         a[1][2]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==7)
                                 {
                                     if(a[2][0]!='O' && a[2][0]!='X')
                                     {
                                         a[2][0]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==8)
                                 {
                                     if(a[2][1]!='O' && a[2][1]!='X')
                                     {
                                         a[2][1]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                                 if(rand1==9)
                                 {
                                     if(a[2][2]!='O' && a[2][2]!='X')
                                     {
                                         a[2][2]='O';
                                         flag=1;
                                     }
                                     else
                                        rand1=0;
                                 }
                             }
                         }
//----------------------------------------------
                 }
             }
            printmatrix(a,3,3);
            if(winnerchecker(a)==1)
            {
                printf("\n\nThe winner is comp player - O!\n\nBetter luck next time!\n\n");
                break;
            }
            if(winnerchecker(a)==3)
            {
                printf("\n\nIt's a draw!\n\n");
                break;
            }
        }
    }
}

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------


int main()
{
    int P1,P2;
    while(1)
    {
        system("cls");
        printf("Enter your choice:\n1.Play with SMART COMP.\n2.Afraid..! Quit then..!\n");

        //scanf("%d",&P1);
        switch(getch())
        {
        case '1':
            smartC();       //calling function
            break;
        case '2':
            exit(0);
        default:
            printf("Wrong Input\n\n");
            break;
        }

        printf("\n\nWant to play again...? Press \"y\" else \"n\".");       // \" to print ". From escape sequences.
        if(getch()=='y')        // Remember we have to write 'y' & not y only.
            1;
        else
            break;
    }
}
